CREATE DATABASE COMPANY;
USE COMPANY;
SELECT * FROM SALES;

-- 1. FIND CUSTOMER_NAME AND UNIT_COST WHERE UNIT_COST BETWEEN 10 AND 50 ---
SELECT CUSTOMER_NAME, UNIT_COST FROM SALES
WHERE UNIT_COST between 10 AND 50;

-- 2. FIND ALL ORDERS SHIPPED BY ;ECONOMY; AND AMOUNT GREATER THAN 25000 ---
SELECT SHIP_MODE, TOTAL_AMOUNT FROM SALES
WHERE SHIP_MODE LIKE 'ECONOMY' AND TOTAL_AMOUNT >25000;

-- 3. RETRIEVE ALL SALES DATA FOR 'TECHNOLOGY' CATEGORY IN 'IRELAND' MADE AFTER 2020-01-01 ---SELECT * FROM SALES
SELECT * FROM SALES
WHERE CATEGORY = 'Technology' AND COUNTRY = 'Ireland' AND ORDER_DATE > '01-01-2020';

-- 4. LIST THE TOP 10 MOST PROFITABLE SALES TRANSACTION IN DESC ORDER ---
SELECT * FROM SALES 
ORDER BY UNIT_PROFIT DESC
LIMIT 10;                    -- TOP 10 TRANSACTIONS ---
-- 4.(b) TO GET NEXT 10 T/S AND REMOVE TOP 10 T/S ---
SELECT * FROM SALES 
ORDER BY UNIT_PROFIT DESC
LIMIT 10, 20;                -- TOP 10 WILL BE SKIPPED THEN WHEN GET NEXT 20 RECORDS ---\

--  5. FIND ALL CUSTOMERS WHOSE NAME STARTS WITH 'J' AND ENDS WITH 'N' ---
SELECT ORDER_ID, CUSTOMER_NAME FROM SALES
WHERE CUSTOMER_NAME LIKE 'J%N';

-- 6. RETREIVE ALL PRODUCT NAMES THAT CONTAIN 'ACCO' ANYWHERE IN THE NAME. --
SELECT PRODUCT_NAME FROM SALES
WHERE PRODUCT_NAME LIKE '%ACCO%';

-- 7. GIVE TOP 5 CITIES WITH THE HIGHEST TOTAL SALES AMOUNT. ---
SELECT CITY, SUM(TOTAL_AMOUNT) AS TOTAL_SALES
FROM SALES 
GROUP BY CITY
ORDER BY TOTAL_SALES DESC
LIMIT 5;

-- 8. DISPLAY THE SECOND SET OF 10 RECORDS FOR CUSTOMER_NAME AND TOTAL_AMOUNT IN DESC ORDER. ---
SELECT CUSTOMER_NAME, TOTAL_AMOUNT FROM SALES
ORDER BY TOTAL_AMOUNT DESC
LIMIT 10, 10;

-- 9. FIND THE TOTAL REVENUE, AVG UNIT COST, AND TOTAL NO OF ORDERS. ---
SELECT SUM(TOTAL_AMOUNT) AS `TOTAL_REVENUE`, AVG(UNIT_COST) AS `AVG_UNIT_COST`, COUNT(SOLD_QUANTITY) AS `TOTAL_NO._OF_ORDERS` FROM SALES;

-- 10. COUNT UNIQUE NUMBER OF REGIONS. ---
SELECT COUNT(distinct REGION) AS UNIQUE_REGION FROM SALES;

-- 11. FIND THE NO OF ORDERS PLACED BY EACH CUSTOMER.--
SELECT CUSTOMER_NAME,  COUNT(ORDER_ID) AS ORDER_COUNT FROM SALES
GROUP BY CUSTOMER_NAME
ORDER BY ORDER_COUNT DESC;

-- 12. RANK 5 PRODUCTS BASED ON TOTAL SALES USING RANK(). ---
SELECT PRODUCT_NAME, SUM(TOTAL_AMOUNT) AS TOTAL_SALES, 
RANK() OVER (ORDER BY SUM(TOTAL_AMOUNT) DESC) AS SALES_RANK
FROM SALES
GROUP BY PRODUCT_NAME;